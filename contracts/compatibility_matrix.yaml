# EvidencePacket Contract Compatibility Matrix
# =============================================
#
# This file defines compatibility rules between schema versions
# and consuming modules.

version: "1.0.0"

# Schema versions
schema_versions:
  "1.0.0":
    released: "2025-10-13"
    status: "stable"
    breaking_changes: []
    notes: "Initial release with complete contract stack"

# Module compatibility
modules:
  feasibility_scorer:
    min_schema_version: "1.0.0"
    max_schema_version: "1.x.x"
    required_fields:
      - schema_version
      - stage
      - source_component
      - evidence_type
      - content
      - confidence
      - applicable_questions
      - signature
    
  decalogo_evaluator:
    min_schema_version: "1.0.0"
    max_schema_version: "1.x.x"
    required_fields:
      - schema_version
      - stage
      - source_component
      - evidence_type
      - content
      - confidence
      - applicable_questions
      - signature
  
  questionnaire_evaluator:
    min_schema_version: "1.0.0"
    max_schema_version: "1.x.x"
    required_fields:
      - schema_version
      - stage
      - source_component
      - evidence_type
      - content
      - confidence
      - applicable_questions
      - signature
  
  evidence_registry:
    min_schema_version: "1.0.0"
    max_schema_version: "1.x.x"
    required_fields:
      - schema_version
      - source_component
      - evidence_type
      - content
      - confidence
      - applicable_questions
      - evidence_hash
      - signature

# Compatibility rules
compatibility_rules:
  # Rule 1: Major version changes break compatibility
  major_version_change:
    description: "Major version changes (e.g., 1.x.x -> 2.x.x) are breaking"
    action: "All consumers must upgrade"
  
  # Rule 2: Minor version changes are backward compatible
  minor_version_change:
    description: "Minor version changes (e.g., 1.0.x -> 1.1.x) add features"
    action: "Consumers can continue using old version but should upgrade"
  
  # Rule 3: Patch version changes are bug fixes
  patch_version_change:
    description: "Patch version changes (e.g., 1.0.0 -> 1.0.1) fix bugs"
    action: "No consumer changes required"
  
  # Rule 4: Field additions are backward compatible
  field_addition:
    description: "New optional fields can be added in minor versions"
    action: "Old consumers ignore new fields, new consumers use them"
  
  # Rule 5: Field removal is breaking
  field_removal:
    description: "Removing fields requires major version bump"
    action: "All consumers must upgrade"
  
  # Rule 6: Type changes are breaking
  type_change:
    description: "Changing field types requires major version bump"
    action: "All consumers must upgrade"

# Migration paths
migrations:
  # Placeholder for future migrations
  # Example:
  # "1.0.0_to_2.0.0":
  #   changes:
  #     - field_renamed: ["old_name", "new_name"]
  #     - field_type_changed: ["field", "old_type", "new_type"]
  #   migration_script: "scripts/migrate_1_to_2.py"

# Testing requirements
testing:
  required_tests:
    - producer_creates_valid_packet
    - consumer_validates_packet
    - consumer_rejects_invalid_packet
    - signature_verification
    - canonical_json_stability
    - immutability_enforcement
    - extra_fields_rejection
  
  compatibility_tests:
    - forward_compatibility: "New producer, old consumer"
    - backward_compatibility: "Old producer, new consumer"

# Deprecation policy
deprecation:
  notice_period_days: 90
  support_period_days: 180
  process:
    - step_1: "Announce deprecation in release notes"
    - step_2: "Add deprecation warnings in code"
    - step_3: "Provide migration guide"
    - step_4: "Remove deprecated features after support period"

# Versioning strategy
versioning:
  strategy: "Semantic Versioning 2.0.0"
  format: "MAJOR.MINOR.PATCH"
  examples:
    - "1.0.0: Initial stable release"
    - "1.1.0: Add optional metadata field"
    - "1.1.1: Fix signature verification bug"
    - "2.0.0: Remove deprecated fields, change content format"

# References
references:
  - "Semantic Versioning: https://semver.org/"
  - "Protobuf Compatibility: https://developers.google.com/protocol-buffers/docs/proto3#updating"
  - "Buf Breaking Change Detection: https://buf.build/docs/breaking"
